name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Trigger workflow on push to master branch
    paths:
      - "menu-frontend/**"  # Only trigger for changes inside 'menu-frontend' directory
      - "menu/**"  # Only trigger for changes inside 'menu' directory
      - ".github/**"
  pull_request:
    branches:
      - master  # Trigger on pull requests targeting master
    paths:
      - "menu-frontend/**"  # Only trigger for changes inside 'menu-frontend' directory
      - "menu/**"  # Only trigger for changes inside 'menu' directory
      - ".github/**"
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js (for frontend tests)
      - name: Set up Node.js for frontend
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Or any version your Next.js app uses

      # Install dependencies and run tests for frontend
      - name: Install dependencies for frontend
        run: |
          cd menu-frontend
          npm install

      - name: Run frontend tests
        run: |
          cd menu-frontend
          npm test  # Assuming you use jest or any testing framework here

      # Set up Python (for backend tests)
      - name: Set up Python for backend
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  # Match the version your backend uses

      # Install dependencies and run tests for backend
      - name: Install dependencies for backend
        run: |
          cd menu
          pip install -r requirements.txt

      - name: Run backend tests
        run: |
          cd menu
          pytest  # Assuming you're using pytest for backend tests

  build-and-deploy:
    needs: build-and-test  # Make sure deployment only happens after the tests pass
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and Push Docker images for frontend and backend
      - name: Build and push Docker images
        run: |
          docker build -f Dockerfile.frontend -t vgnsh/menu-frontend:latest .
          docker build -f Dockerfile.backend -t vgnsh/django-backend:latest .
          docker push vgnsh/menu-frontend:latest
          docker push vgnsh/django-backend:latest

      # Set up K3s CLI
      - name: Set up Kubectl
        run: |
         mkdir ${HOME}/.kube
         echo ${{ secrets.KUBECONFIG }} | base64 --decode > ${HOME}/.kube/config    

      # Verify Kubernetes connection
      - name: Verify Kubernetes Connection
        run: |
          kubectl get nodes  # Ensure kubectl can access the cluster

      # Deploy the frontend and backend to K3s
      - name: Deploy frontend and backend to K3s
        run: |
          kubectl rollout restart deployment menu-frontend -n default  # Restart frontend deployment
          kubectl rollout restart deployment django-backend -n default  # Restart backend deployment
